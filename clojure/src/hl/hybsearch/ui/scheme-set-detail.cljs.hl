(ns ui.scheme-set-detail
  (:require [ui.clustal-scheme-detail :as scheme-detail]
            [ui.analysis-set-detail :as set-detail]
            [ui.job-detail :as job]
            [ui.query :as query]
            [datascript :as d]))

;; Inputs are formula cells
(defelem detail
  [{:keys [clustal-scheme analysis-set job results]} children]
  (let [scheme-name (cell= (get clustal-scheme :clustalscheme/name))
        set-name (cell= (get analysis-set :analysisset/name))]
    (div :style "height: 100%;"
      (div :class "ui pointing secondary menu"
           (div :class "float right header item"
                (text "Scheme: ~{scheme-name} | Set: ~{set-name}"))
           (a :class "blue active item" :data-tab "clustal-scheme" (i :class "setting icon") "Clustal Scheme")
           (a :class "blue item" :data-tab "analysis-set" (i :class "cube icon") "Analysis Set")
           (a :class "blue item" :data-tab "job" (i :class "dashboard icon") "Processing")
           (a :class "blue item" :data-tab "query" (i :class "search icon") "Query"))
      (div :class "ui basic active tab segment" :data-tab "clustal-scheme"
           :style "height: 95%; overflow-y: auto;"
           (scheme-detail/detail :clustal-scheme clustal-scheme))
      (div :class "ui basic tab segment"        :data-tab "analysis-set"
           :style "height: 95%; overflow-y: auto;"
           (set-detail/detail :analysis-set analysis-set))
      (div :class "ui basic tab segment"        :data-tab "job"
           :style "height: 95%; overflow-y: auto;"
           (job/detail :job job))
      (div :class "ui basic tab segment" :data-tab "query"
           :style "height: 95%; overflow-y: auto;"
           (query/qui :job job :results results)))))
